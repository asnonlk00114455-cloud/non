-- โหลด Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- ฟังก์ชัน Request (รองรับ Executor หลายตัว)
local req = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request

------------------------------------------------------
-- GLOBAL CONFIG
------------------------------------------------------
getgenv().Info = {
    EngineOptions = { "Stockfish 17", "Sunfish" },
    Connections = {}
}

getgenv().Settings = {
    AutoPlay = false,
    Engine = "Stockfish 17",
    Delay = 2 -- ค่าเริ่มต้น 2 วินาที
}

------------------------------------------------------
-- ฟังก์ชัน Disconnect
------------------------------------------------------
local function DisconnectAll(connections)
    for _, connection in pairs(connections) do
        if connection then
            connection:Disconnect()
        end
    end
end

------------------------------------------------------
-- ฟังก์ชัน BestMove
------------------------------------------------------
local function BestMove(engine)
    local selected = engine or getgenv().Settings.Engine
    local tableset = ReplicatedStorage.InternalClientEvents.GetActiveTableset:Invoke()
    if not tableset then return nil end

    local FEN = tableset:WaitForChild("FEN").Value
    local res

    if selected == "Stockfish 17" then
        local ok, err = pcall(function()
            res = req({
                Url = "https://chess-api.com/v1",
                Method = "POST",
                Headers = { ["Content-Type"] = "application/json" },
                Body = HttpService:JSONEncode({ fen = FEN }),
            })
        end)

        if ok and res and res.Success then
            local data = HttpService:JSONDecode(res.Body)
            return data.from, data.to
        else
            warn("[Engine Error] Stockfish failed:", err or res.StatusCode)
            return nil, nil
        end

    elseif selected == "Sunfish" then
        local ok, result = pcall(function()
            local module = require(game:GetService("Players").LocalPlayer.PlayerScripts.AI.Sunfish)
            return module:GetBestMove(FEN, 1000)
        end)
        if ok and result then
            return result
        else
            warn("[Engine Error] Sunfish failed:", result)
            return nil, nil
        end
    end
end

------------------------------------------------------
-- ฟังก์ชัน PlayMove
------------------------------------------------------
local function PlayMove(engine)
    local from, to = BestMove(engine)
    if from and to then
        ReplicatedStorage.Chess.SubmitMove:InvokeServer(from .. to)
        return true
    elseif from then
        ReplicatedStorage.Chess.SubmitMove:InvokeServer(from)
        return true
    end
    return false
end

------------------------------------------------------
-- ฟังก์ชัน PlaySuccesfullMove
------------------------------------------------------
local function PlaySuccesfullMove()
    local success = PlayMove()
    if not success then
        -- ถ้า Stockfish ล่ม → ลอง Sunfish
        success = PlayMove("Sunfish")
        if success then
            print("[Engine Fallback] Stockfish failed → Using Sunfish instead")
        else
            warn("[Engine Error] Both engines failed to move!")
        end
    else
        print("[Engine] Move played successfully")
    end
end

------------------------------------------------------
-- ฟังก์ชัน AutoPlay
------------------------------------------------------
local function AutoPlay()
    if not getgenv().Settings.AutoPlay then return end

    DisconnectAll(getgenv().Info.Connections)

    getgenv().Info.Connections["MoveReceived"] =
        ReplicatedStorage.Chess.MovePlayedRemoteEvent.OnClientEvent:Connect(function()
            task.wait(getgenv().Settings.Delay)
            PlaySuccesfullMove()
        end)

    getgenv().Info.Connections["GameStart"] =
        ReplicatedStorage.Chess.StartGameEvent.OnClientEvent:Connect(function()
            task.wait(getgenv().Settings.Delay)
            PlaySuccesfullMove()
        end)

    PlaySuccesfullMove()
end

------------------------------------------------------
-- สร้างหน้าต่าง Rayfield
------------------------------------------------------
local Window = Rayfield:CreateWindow({
    Name = "Chess Club - Rayfield UI",
    LoadingTitle = "Auto Chess Engine",
    LoadingSubtitle = "Powered by Stockfish & Sunfish",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "ChessClub",
        FileName = "EngineConfig"
    },
    KeySystem = false
})

------------------------------------------------------
-- TAB: MAIN
------------------------------------------------------
local MainTab = Window:CreateTab("Main", 4483362458)

MainTab:CreateDropdown({
    Name = "Select Engine",
    Options = getgenv().Info.EngineOptions,
    CurrentOption = getgenv().Settings.Engine,
    Callback = function(choice)
        getgenv().Settings.Engine = choice
        print("[UI] Engine switched to:", choice)
    end
})

MainTab:CreateToggle({
    Name = "Auto Play Best Moves",
    CurrentValue = false,
    Callback = function(v)
        getgenv().Settings.AutoPlay = v
        if v then
            task.spawn(AutoPlay)
        else
            DisconnectAll(getgenv().Info.Connections)
        end
    end
})

MainTab:CreateButton({
    Name = "▶ Play Best Move",
    Callback = function()
        task.spawn(PlaySuccesfullMove)
    end
})

MainTab:CreateSlider({
    Name = "Move Delay (seconds)",
    Range = {0, 10},
    Increment = 1,
    Suffix = "s",
    CurrentValue = getgenv().Settings.Delay,
    Callback = function(value)
        getgenv().Settings.Delay = value
        print("[UI] Delay updated to:", value, "seconds")
    end
})

------------------------------------------------------
-- TAB: SETTINGS
------------------------------------------------------
local SettingsTab = Window:CreateTab("Settings", 4483362458)

SettingsTab:CreateButton({
    Name = "Reset Config",
    Callback = function()
        getgenv().Settings = {
            AutoPlay = false,
            Engine = "Stockfish 17",
            Delay = 2
        }
        print("[Config] Reset completed.")
    end
})
